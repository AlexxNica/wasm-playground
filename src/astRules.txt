int: ( int )
$str: ( $str )
string: ( string )
i32: ( i32 )
i64: ( i64 )
f32: ( f32 )
f64: ( f64 )
name: ( name )

var: <int> | <$str>

ntype: <i32> | <i64> | <f32> | <f64>

expr: <nop> | <block> | <loop> | <select> | <if> | <br> | <br_if> | <br_table> | <return> | <call> | <call_import> | <call_indirect> | <get_local> | <set_local> | <unreachable> | <memory_size> | <grow_memory>

nop:  ( nop )
block:  ( block <name>? <expr>* )
loop:  ( loop <name>? <name>? <expr>* )
select:  ( select <expr> <expr> <expr> )
if:  ( if <expr> <then> <else>? ) | ( if <expr> <expr> <expr>? )
then: ( then <name>? <expr>* )
else: ( else <name>? <expr>* )
br:  ( br <var> <expr>? )
br_if:  ( br_if <var> <expr>? <expr> )
br_table:  ( br_table <var> <var> <expr>? <expr> )
return:  ( return <expr>? )
call:  ( call <var> <expr>* )
call_import:  ( call_import <var> <expr>* )
call_indirect:  ( call_indirect <var> <expr> <expr>* )
get_local:  ( get_local <var> )
set_local:  ( set_local <var> <expr> )
unreachable:  ( unreachable )
memory_size:  ( memory_size )
grow_memory:  ( grow_memory <expr> )

func:   ( func <$str>? <type>? <param>* <result>? <local>* <expr>* )
param:  ( param <ntype>* ) | ( param <$str> <ntype> )
result: ( result <ntype> )
local:  ( local <ntype>* ) | ( local <$str> <ntype> )

module:  ( module <memory>? <import>* <type>* <func>* <export>* <table>* <start>? )
type:    ( type <name>? ( func <param>* <result>? ) )
import:  ( import <$str>? <string> <string> (param <ntype>* ) (result <ntype>)* )
export:  ( export <string> <var> ) | ( export <string> <memory>)
start:   ( start <var> )
table:   ( table <var>* )
memory:  ( memory <int> <int>? <segment>* )
segment: ( segment <int> <string> )
