ntype: ( i32 ) | ( i64 ) | ( f32 ) | ( f64 )

expr: <nop> | <block> | <loop> | <select> | <if> | <br> | <br_if> | <br_table> | <return> | <call> | <call_import> | <call_indirect> | <get_local> | <set_local> | <unreachable> | <memory_size> | <grow_memory>

nop:  ( nop )
block:  ( block <name>? <expr>* )
loop:  ( loop <name1>? <name2>? <expr>* )
select:  ( select <expr> <expr> <expr> )
if:  ( if <expr> ( then <name>? <expr>* ) ( else <name>? <expr>* )? ) | ( if <expr1> <expr2> <expr3>? )
br:  ( br <var> <expr>? )
br_if:  ( br_if <var> <expr>? <expr> )
br_table:  ( br_table <var> <var> <expr>? <expr> )
return:  ( return <expr>? )
call:  ( call <var> <expr>* )
call_import:  ( call_import <var> <expr>* )
call_indirect:  ( call_indirect <var> <expr> <expr>* )
get_local:  ( get_local <var> )
set_local:  ( set_local <var> <expr> )
unreachable:  ( unreachable )
memory_size:  ( memory_size )
grow_memory:  ( grow_memory <expr> )

func:   ( func <name>? <ntype>? <param>* <result>? <local>* <expr>* )
param:  ( param <ntype>* ) | ( param <name> <ntype> )
result: ( result <ntype> )
local:  ( local <ntype>* ) | ( local <name> <ntype> )

module:  ( module <type>* <func>* <import>* <export>* <table>* <memory>? <start>? )
type:    ( type <name>? ( func <param>* <result>? ) )
import:  ( import <name>? <string> <string> (param <ntype>* ) (result <ntype>)* )
export:  ( export <string> <var> ) | ( export <string> <memory>)
start:   ( start <var> )
table:   ( table <var>* )
memory:  ( memory <int> <int>? <segment>* )
segment: ( segment <int> <string> )
